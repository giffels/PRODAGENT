#! /bin/bash
   
# Script that starts the ProdAgent in this configuration.
  
echo -e "\n Preparing the environment"
source env_mytestarea.sh;

source $MYTESTAREA/$SCRAM_ARCH/cms/prodagent/PRODAGENT_$PAVERSION-cmp/etc/profile.d/dependencies-setup.sh
if [ -e $MYTESTAREA/$SCRAM_ARCH/external/py2-mysqldb/1.2.2-cmp/etc/profile.d/init.sh ]; then
  source $MYTESTAREA/$SCRAM_ARCH/external/py2-mysqldb/1.2.2-cmp/etc/profile.d/init.sh
fi

export PRODAGENT_ROOT=$MYTESTAREA/PRODAGENT
export PRODCOMMON_ROOT=$MYTESTAREA/PRODCOMMON
export DBS_ROOT=$MYTESTAREA/DBS

export PATH=$PRODAGENT_ROOT/bin:$PATH
export PUTIL=$PRODAGENT_ROOT/util
export PYTHONPATH=$PRODAGENT_ROOT/lib:$PRODCOMMON_ROOT/lib:$DBS_ROOT/Clients/Python:$PYTHONPATH
export DBS_CLIENT_CONFIG=$MYTESTAREA/DBS/Clients/Python/DBSAPI/dbs.config
export DBS_CLIENT_ROOT=$DBS_ROOT

echo -e "\n ProdAgent status:"
prodAgentd --status
 
# If an option different from zero is passed, everything is restarted.
if [ $1 -eq 1 ]; then
    prodAgentd --shutdown
    echo -e "\n Restarting the prodAgent. The password corresponds to the one for the DB: " 
    mysqladmin -u root -p shutdown --socket=$PRODAGENT_WORKDIR/mysqldata/mysql.sock
    sleep 1

    nohup mysqld_safe --datadir=$PRODAGENT_WORKDIR/mysqldata --socket=$PRODAGENT_WORKDIR/mysqldata/mysql.sock --skip-networking --log-error=$PRODAGENT_WORKDIR/mysqldata/error.log --pid-file=$PRODAGENT_WORKDIR/mysqldata/mysqld.pid > /dev/null 2>&1 < /dev/null &
    prodAgentd --start
    reauth 43200 $PRODAGENT_USER --fork
fi


# For getting a new proxy:
# source /afs/cern.ch/cms/LCG/LCG-2/UI/cms_ui_env.sh
# voms-proxy-init -voms cms:/cms/Role=production -valid 200:00
# myproxy-init -d -n -c 200 -s myproxy.cern.ch
